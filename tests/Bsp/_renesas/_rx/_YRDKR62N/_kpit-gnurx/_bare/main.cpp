/***********************************************************************/
/*                                                                     */
/*  FILE        :test2.cpp                                             */
/*  DATE        :Sat, Feb 28, 2015                                     */
/*  DESCRIPTION :Main Program                                          */
/*  CPU TYPE    :RX62N                                                 */
/*                                                                     */
/*  This file is generated by KPIT GNU Project Generator.              */
/*                                                                     */
/***********************************************************************/
                    
																							
																							
#include "Bsp/Api.h"
//#include <stdio.h>

#if 0
#ifdef CPPAPP
//Initialize global constructors
// The GNURX uses a different method to initialize global constructors
// The below call is not invoked in case of RX target
extern "C" void __main()
{
  static int initialized;
  if (! initialized)
    {
      typedef void (*pfunc) ();
      extern pfunc __ctors[];
      extern pfunc __ctors_end[];
      pfunc *p;

      initialized = 1;
      for (p = __ctors_end; p > __ctors; )
	(*--p) ();

    }
}
#endif 
#endif

#define  LED4                   PORTD.DR.BIT.B5
#define  LED5                   PORTE.DR.BIT.B3
#define  LED6                   PORTD.DR.BIT.B2
#define  LED7                   PORTE.DR.BIT.B0
#define  LED8                   PORTD.DR.BIT.B4
#define  LED9                   PORTE.DR.BIT.B2
#define  LED10                  PORTD.DR.BIT.B1
#define  LED11                  PORTD.DR.BIT.B7
#define  LED12                  PORTD.DR.BIT.B3
#define  LED13                  PORTE.DR.BIT.B1
#define  LED14                  PORTD.DR.BIT.B0
#define  LED15                  PORTD.DR.BIT.B6

#define  LED_ON                 0
#define  LED_OFF                1



/*$PAGE*/
/*
*********************************************************************************************************
*                                               LED ON
*
* Description: This function is used to control any or all the LEDs on the board.
*
* Arguments  : led    is the number of the LED to control
*                     0    indicates that you want ALL the LEDs to be ON
*                     1    turns ON LED1 on the board
*                     .
*                     .
*                     3    turns ON LED3 on the board
*********************************************************************************************************
*/

void  LED_On (int  led)
{
    switch (led) {
        case 0:
            LED4  = LED_ON;
            LED5  = LED_ON;
            LED6  = LED_ON;
            LED7  = LED_ON;
            LED8  = LED_ON;
            LED9  = LED_ON;
            LED10 = LED_ON;
            LED11 = LED_ON;
            LED12 = LED_ON;
            LED13 = LED_ON;
            LED14 = LED_ON;
            LED15 = LED_ON;
            break;

        case 4:
            LED4  = LED_ON;
            break;

        case 5:
            LED5  = LED_ON;
            break;

        case 6:
            LED6  = LED_ON;
            break;

        case 7:
            LED7  = LED_ON;
            break;

        case 8:
            LED8  = LED_ON;
            break;

        case 9:
            LED9  = LED_ON;
            break;

        case 10:
            LED10 = LED_ON;
            break;

        case 11:
            LED11 = LED_ON;
            break;

        case 12:
            LED12 = LED_ON;
            break;

       case 13:
            LED13 = LED_ON;
            break;

       case 14:
            LED14 = LED_ON;
            break;

       case 15:
            LED15 = LED_ON;
            break;

       default:
            break;
    }
}


/*$PAGE*/
/*
*********************************************************************************************************
*                                               LED OFF
*
* Description: This function is used to control any or all the LEDs on the board.
*
* Arguments  : led    is the number of the LED to turn OFF
*                     0    indicates that you want ALL the LEDs to be OFF
*                     1    turns OFF LED1 on the board
*                     .
*                     .
*                     3    turns OFF LED3 on the board
*********************************************************************************************************
*/

void  LED_Off (int  led)
{
    switch (led) {
        case 0:
            LED4  = LED_OFF;
            LED5  = LED_OFF;
            LED6  = LED_OFF;
            LED7  = LED_OFF;
            LED8  = LED_OFF;
            LED9  = LED_OFF;
            LED10 = LED_OFF;
            LED11 = LED_OFF;
            LED12 = LED_OFF;
            LED13 = LED_OFF;
            LED14 = LED_OFF;
            LED15 = LED_OFF;
            break;

        case 4:
            LED4  = LED_OFF;
            break;

        case 5:
            LED5  = LED_OFF;
            break;

        case 6:
            LED6  = LED_OFF;
            break;

        case 7:
            LED7  = LED_OFF;
            break;

        case 8:
            LED8  = LED_OFF;
            break;

        case 9:
            LED9  = LED_OFF;
            break;

        case 10:
            LED10 = LED_OFF;
            break;

        case 11:
            LED11 = LED_OFF;
            break;

        case 12:
            LED12 = LED_OFF;
            break;

       case 13:
            LED13 = LED_OFF;
            break;

       case 14:
            LED14 = LED_OFF;
            break;

       case 15:
            LED15 = LED_OFF;
            break;

       default:
            break;
    }
}


/*$PAGE*/
/*
*********************************************************************************************************
*                                             LED TOGGLE
*
* Description: This function is used to toggle the state of any or all the LEDs on the board.
*
* Arguments  : led    is the number of the LED to toggle
*                     0    indicates that you want ALL the LEDs to toggle
*                     1    Toggle LED1 on the board
*                     .
*                     .
*                     3    Toggle LED3 on the board
*********************************************************************************************************
*/

void  LED_Toggle (int  led)
{
    switch (led) {
        case 0:
            LED4  = ~LED4;
            LED5  = ~LED5;
            LED6  = ~LED6;
            LED7  = ~LED7;
            LED8  = ~LED8;
            LED9  = ~LED9;
            LED10 = ~LED10;
            LED11 = ~LED11;
            LED12 = ~LED12;
            LED13 = ~LED13;
            LED14 = ~LED14;
            LED15 = ~LED15;
            break;

        case 4:
            LED4  = ~LED4;
            break;

        case 5:
            LED5  = ~LED5;
            break;

        case 6:
            LED6  = ~LED6;
            break;

        case 7:
            LED7  = ~LED7;
            break;

        case 8:
            LED8  = ~LED8;
            break;

        case 9:
            LED9  = ~LED9;
            break;

        case 10:
            LED10 = ~LED10;
            break;

        case 11:
            LED11 = ~LED11;
            break;

        case 12:
            LED12 = ~LED12;
            break;

       case 13:
            LED13 = ~LED13;
            break;

       case 14:
            LED14 = ~LED14;
            break;

       case 15:
            LED15 = ~LED15;
            break;

       default:
            break;
    }
}


static  void  LED_Init (void)
{
    PORTD.DDR.BIT.B0 = 1;                                       /* Select port function.                                */
    PORTD.DDR.BIT.B1 = 1;
    PORTD.DDR.BIT.B2 = 1;
    PORTD.DDR.BIT.B3 = 1;
    PORTD.DDR.BIT.B4 = 1;
    PORTD.DDR.BIT.B5 = 1;
    PORTD.DDR.BIT.B6 = 1;
    PORTD.DDR.BIT.B7 = 1;
    PORTE.DDR.BIT.B0 = 1;
    PORTE.DDR.BIT.B1 = 1;
    PORTE.DDR.BIT.B2 = 1;
    PORTE.DDR.BIT.B3 = 1;

    LED_Off(0);                                                 /* Turn OFF all LEDs.                                   */
}


class Test
{
public:
    volatile int m_j;
	 
    Test():m_j(0x10){}
     
    void set( int newvalue ) { m_j = newvalue; }

};

static Test j;

int main(void)
{
    //
    Bsp_Api_initialize();
    LED_Init();

    // TODO: add application code here

    while (1) {

        int i,m;
        for( m = 4; m <= 15; m++ )
            {
            LED_Toggle(m);

            for(i=0; i< 1000000; i++)
                {
                j.set( i*m );
                }
            }

        }
        
  return 0;
}
