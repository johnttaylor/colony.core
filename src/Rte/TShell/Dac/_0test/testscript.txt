#
# set baseline
#
set v0-c3 a
set v0-c1 a
set v0-mc3 a
set v3-mc3 a
set v3-c3 a
set v3-c1 a

viewers clear
viewers
rte-read ll
rte-read bar3
try IF $_lastout$ != "{ ([?], ?, ?, ?), ([?], ?, ?, ?), ([?], ?, ?, ?), ([?], ?, ?, ?) }"
	print "Failed. Bad initial state"
	bye app 1
try ENDIF
viewers 0
tokenize * $_lastout$ v0-c3 6 v0-mc3 9 v0-c1 4
viewers 3
tokenize * $_lastout$ v3-c3 6 v3-mc3 9 v3-c1 4
set
try IF $v0-c3$ != 0 OR $v0-mc3$ != 0 OR $v0-c1$ != 0
	print "Failed. Bad initial viewer counts for V0"
	bye app 1
try ENDIF
try IF $v3-c3$ != 0 OR $v3-mc3$ != 0 OR $v3-c1$ != 0
	print "Failed. Bad initial viewer counts for V3"
	bye app 1
try ENDIF
set

#
# Write an entire point
#
rte-write bar1 {( bob, t, 0 )}
rte-read bar1
try IF $_lastout$ != "{ (`"bob`", T, 0) }"
	print "Failed Point write of bar1"
	bye app 1
try ENDIF
viewers 0
tokenize * $_lastout$ v0-c3 6 v0-mc3 9 v0-c1 4
viewers 3
tokenize * $_lastout$ v3-c3 6 v3-mc3 9 v3-c1 4
try IF $v0-c3$ != 0 OR $v0-mc3$ != 0 OR $v0-c1$ != 1
	print "Failed. Bad viewer counts for Point update of bar1 for V0"
	bye app 1
try ENDIF
try IF $v3-c3$ != 0 OR $v3-mc3$ != 0 OR $v3-c1$ != 1
	print "Failed. Bad viewer counts for Point update of bar1 for V3"
	bye app 1
try ENDIF


#
# Write a single tuple (and test empty field notation)
#
rte-write bar1 0 ( , , 1 )
rte-read bar1
try IF $_lastout$ != "{ (`"bob`", T, 1) }"
	print "Failed Tuple write of bar1"
	bye app 1
try ENDIF
viewers 0
tokenize * $_lastout$ v0-c3 6 v0-mc3 9 v0-c1 4
viewers 3
tokenize * $_lastout$ v3-c3 6 v3-mc3 9 v3-c1 4
try IF $v0-c3$ != 0 OR $v0-mc3$ != 0 OR $v0-c1$ != 2
	print "Failed. Bad viewer counts for Tuple update of bar1 for V0"
	bye app 1
try ENDIF
try IF $v3-c3$ != 0 OR $v3-mc3$ != 0 OR $v3-c1$ != 2
	print "Failed. Bad viewer counts for Tuple update of bar1 for V3"
	bye app 1
try ENDIF


#
# Write an entire point
#
viewers clear
rte-write bar3 {(t,a,t,0),(f,b,t,1),(f,c,f,2),(t,d,t,3)}
rte-read bar3
try IF $_lastout$ != "{ ([T], `"a`", T, 0), ([F], `"b`", T, 1), ([F], `"c`", F, 2), ([T], `"d`", T, 3) }"
	print "Failed. Failed Point write of bar3"
	bye app 1
try ENDIF
viewers 0
tokenize * $_lastout$ v0-c3 6 v0-mc3 9 v0-c1 4
viewers 3
tokenize * $_lastout$ v3-c3 6 v3-mc3 9 v3-c1 4
try IF $v0-c3$ != 1 OR $v0-mc3$ != 1 OR $v0-c1$ != 0
	print "Failed. Bad viewer counts for Point update of bar3 for V0"
	bye app 1
try ENDIF
try IF $v3-c3$ != 1 OR $v3-mc3$ != 1 OR $v3-c1$ != 0
	print "Failed. Bad viewer counts for Point update of bar3 for V3"
	bye app 1
try ENDIF


#
# Write a single tuple (and test empty field notation)
#
rte-write bar3 3 (,,, 44 )
rte-read bar3 3
try IF $_lastout$ != "([T], `"d`", T, 44)"
	print "Failed Tuple[3] write of bar3"
	bye app 1
try ENDIF
viewers 0
tokenize * $_lastout$ v0-c3 6 v0-mc3 9 v0-c1 4
viewers 3
tokenize * $_lastout$ v3-c3 6 v3-mc3 9 v3-c1 4
try IF $v0-c3$ != 2 OR $v0-mc3$ != 1 OR $v0-c1$ != 0
	print "Failed. Bad viewer counts for Tuple[3] update of bar3 for V0"
	bye app 1
try ENDIF
try IF $v3-c3$ != 2 OR $v3-mc3$ != 1 OR $v3-c1$ != 0
	print "Failed. Bad viewer counts for Tuple[3] update of bar3 for V3"
	bye app 1
try ENDIF


#
# Write a single tuple (and test empty field notation AND membership fields)
#
rte-write bar3 2 (t,,,)
rte-read bar3 2
try IF $_lastout$ != "([T], `"c`", F, 2)"
	print "Failed Tuple[2] write of bar3"
	bye app 1
try ENDIF
viewers 0
tokenize * $_lastout$ v0-c3 6 v0-mc3 9 v0-c1 4
viewers 3
tokenize * $_lastout$ v3-c3 6 v3-mc3 9 v3-c1 4
try IF $v0-c3$ != 3 OR $v0-mc3$ != 2 OR $v0-c1$ != 0
	print "Failed. Bad viewer counts for Tuple[2] update of bar3 for V0"
	bye app 1
try ENDIF
try IF $v3-c3$ != 3 OR $v3-mc3$ != 2 OR $v3-c1$ != 0
	print "Failed. Bad viewer counts for Tuple[2] update of bar3 for V3"
	bye app 1
try ENDIF


#
# Write a single tuple (and test empty field notation AND viewer by value vs seqnumber)
#
rte-write bar3 3 (,,, 44 )
rte-read bar3 3
try IF $_lastout$ != "([T], `"d`", T, 44)"
	print "Failed Tuple[3] 'duplicate' write of bar3"
	bye app 1
try ENDIF
viewers 0
tokenize * $_lastout$ v0-c3 6 v0-mc3 9 v0-c1 4
viewers 3
tokenize * $_lastout$ v3-c3 6 v3-mc3 9 v3-c1 4
try IF $v0-c3$ != 3 OR $v0-mc3$ != 2 OR $v0-c1$ != 0
	print "Failed. Bad viewer counts for Tuple[3] 'duplicate' update of bar3 for V0"
	bye app 1
try ENDIF
try IF $v3-c3$ != 4 OR $v3-mc3$ != 2 OR $v3-c1$ != 0
	print "Failed. Bad viewer counts for Tuple[3] 'duplicate' update of bar3 for V3"
	bye app 1
try ENDIF

#
# TODO: Remaing tests...
#

# Test of 'locked'
# 1) basic lock, unlock, no update if locked (and proper viewer counts)
# 2) What about membership?
# 3) locked and invalidate update
# 4) unlock with a value -->should 'fail'
# 5) just lock/unlock should not trip the viewer count of a by-value viewer

# Test of invalidate
# 1) basic ? and ?<val> (and proper viewer counts)

# Test ALL Elements types (MD5, BitFlags, Seqnum (with appropriate semantics), etc.)


#
# ALL DONE (and ALL passed)
print "ALL TESTS PASSED!"
bye app 0


